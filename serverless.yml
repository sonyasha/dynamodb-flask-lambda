service: dynamodb-flask-lambda

provider:
  name: aws
  runtime: python3.9
  region: ${env:AWS_REGION}
  memorySize: 128
  iamRoleStatements:
  - Effect: Allow
    Action:
    - dynamodb:Query
    - dynamodb:Scan
    - dynamodb:GetItem
    - dynamodb:PutItem
    - dynamodb:UpdateItem
    - dynamodb:DeleteItem
    Resource:
    - { "Fn::GetAtt": [ "UserTable", "Arn" ] }
plugins:
- serverless-python-requirements
- serverless-wsgi
package:
  exclude:
  - node_modules/**
  - tests/**
  - .gitignore
  - .github/
  - requirements-lint.txt
  - docker-compose.yml
  - Dockerfile
  - .env
  include:
  - api/templates/**
custom:
  wsgi:
    app: api.app.app
    pythonRequirements:
      dockerizePip: true
functions:
  app:
    handler: wsgi_handler.handler
    environment:
      FLASK_DEBUG: 0
    events:
    - http: ANY /
    - http: 'ANY {proxy+}'
resources:
  Resources:
    UserTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:

        - AttributeName: userId
          AttributeType: S
        KeySchema:

        - AttributeName: userId
          KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
